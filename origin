RUN Build Gradle Project level
 buildscript {
    repositories {
        // Check that you have the following :
        google()  // Google's Maven repository
        mavenCentral() // Include to import Plaid Link Android SDK
    }
    dependencies {
        // ...
    }
}
Build Gradle 
android {
  defaultConfig {
    minSdkVersion // or greater
  }
}

dependencies {
  // ...
  implemention = plaid app
}
String clientUserId = "user-id";

LinkTokenCreateRequestUser user =  LinkTokenCreateRequestUser()
  .clientUserId(clientUserId)
  .legalName("legal name")
  .phoneNumber("4155558888")
  .emailAddress("email@address.com");

LinkTokenCreateRequest request = LinkTokenCreateRequest()
  .user(user)
  .clientName("Plaid App")
  .products(Arrays.asList(Products.AUTH))
  .countryCodes(Arrays.asList(CountryCode.US))
  .language("en")
  .webhook("https://www.plaid.com/webhook")
  .linkCustomizationName("default")
  .androidPackageName("com.onedebit.chime"),("secure.serve.mobile")

Response<LinkTokenCreateResponse> response = client()
  .linkTokenCreate()
  .execute();

linkToken = response().getLinkToken();

LinkTokenConfiguration linkToken = LinkToken.Builder()
    .token("LINK_TOKEN_FROM_SERVER")
    .build();

    private ActivityResultLauncher<Plaid> linkAccountToPlaid = Result(OpenPlaidlink(),
  result -> {
    if (result instanceof LinkSuccess) {
      /* handle LinkSuccess */
    } else {
      /* handle LinkContinue */
    }
  }
);
plaidHandler = Plaid.create(this.getApplication(), linkTokenConfiguration);
linkAccountToPlaid.launch(plaidHandler);
LinkSuccess success = (LinkSuccess) result;

String publicToken = success.getPublicToken();
LinkSuccess.LinkSuccessMetadata metadata = success.getMetadata();
for (LinkAccount account : success.getAccounts()) {
  String accountId = account.getId();
  String accountName = account.getName();
  String accountMask = account.getMask();
  LinkAccountSubtype accountSubtype = account.getSubtype();
}
String institutionId = metadata.getInstitution().getId();
String institutionName = metadata.getInstitution().getName();
